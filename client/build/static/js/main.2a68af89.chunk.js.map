{"version":3,"sources":["images/74-nauseated-face-2.svg","images/661-sparkles.svg","images/713-open-book.svg","images/406-heart-with-ribbon.svg","images/undraw_absorbed.svg","components/Features.js","components/Footer.js","components/Home.js","components/Navbar.js","components/Login.js","components/TweetBtn.js","components/Tweet.js","components/TweetFeed.js","components/Feed.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Features","react_default","a","createElement","className","src","nauseated","alt","sparkles","book","gift","Footer","react_router_dom","to","href","Home","reading","srcSet","components_Features","components_Footer","Navbar","props","linkList","user","key","onClick","clickFunc","type","logoutUser","then","history","push","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","id","value","handleLogin","preventDefault","axios","get","resp","showPinbox","window","open","concat","data","url","handleSubmit","showForm","state","pin","loginUser","_this2","react_router","components_Navbar","onSubmit","placeholder","onChange","Component","TweetBtn","handleClick","isActive","content","addTweet","rows","autoFocus","defaultProps","Tweet","handleClickReply","showReply","handleClickLike","isLiked","tweet","id_str","status","handleClickRetweet","isRetweet","tweetContent","text","replyBox","components_TweetBtn","entities","media","substring","length","likeClass","replyClass","retweetClass","name","dist_default","properties","media_url","TweetFeed","_ref","tweets","fetchTweets","tweetList","map","components_Tweet","Feed","tweet_id","JSON","parse","localStorage","getItem","fetch","response","json","finally","setItem","stringify","refreshTweets","author","username","Math","random","postNew","toConsumableArray","components_TweetFeed","About","App","componentDidMount","post","token","secret","profileImage","profile_image_url","accessToken","accessSecret","Promise","clear","_this$state","exact","path","component","render","components_Login","assign","components_Feed","components_About","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a68af89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/74-nauseated-face-2.d3d1e0e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/661-sparkles.a4586395.svg\";","module.exports = __webpack_public_path__ + \"static/media/713-open-book.de4934a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/406-heart-with-ribbon.b142cd3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_absorbed.e154de50.svg\";","import React from 'react';\nimport '../styles/Features.css';\nimport nauseated from '../images/74-nauseated-face-2.svg';\nimport sparkles from '../images/661-sparkles.svg';\nimport book from '../images/713-open-book.svg';\nimport gift from '../images/406-heart-with-ribbon.svg';\n\nfunction Features() {\n  return (\n    <div className=\"features\">\n      <h1>Features</h1>\n      <p>Kalrav is packed with exciting features!</p>\n      <div className=\"featureSet\">\n        <div className=\"feature\">\n          <img src={nauseated} alt=\"\" />\n          <h2>Don&apos;t Nauseate</h2>\n          <p>We only display content that matters, the actual tweets that is.</p>\n        </div>\n        <div className=\"feature\">\n          <img src={sparkles} alt=\"\" />\n          <h2>Clean & Minimal</h2>\n          <p>Everything is there for a reason and that reason is you.</p>\n        </div>\n        <div className=\"feature\">\n          <img src={book} alt=\"\" />\n          <h2>Reading Experience</h2>\n          <p>With only you and the tweets, there is a great reading experience!</p>\n        </div>\n        <div className=\"feature\">\n          <img src={gift} alt=\"\" />\n          <h2>\n            Created with <i className=\"icon-heart\" />\n          </h2>\n          <p>We have worked hard to provide this excellent expereince to you!</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Features;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Footer.css';\n\nfunction Footer() {\n  return (\n    <footer className=\"Footer\">\n      <div className=\"logo\">\n        <h1>Kalrav</h1>\n        <p>© 2019 xypnox</p>\n      </div>\n      <div className=\"footer-links\">\n        <Link to=\"/login\">Login</Link>\n        <Link to=\"/about\">About</Link>\n        <a href=\"https://github.com/xypnox/kalrav/\">Github Repo</a>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Features from './Features';\nimport Footer from './Footer';\nimport '../styles/Home.css';\nimport reading from '../images/undraw_absorbed.svg';\n\nfunction Home() {\n  return (\n    <div className='home container'>\n      <header>\n        <div className='intro'>\n          <div>\n            <h1>Kalrav</h1>\n            <h2>A tweet app</h2>\n            <Link to='/login' className='action-button'>\n              Get Started\n            </Link>\n          </div>\n          <img src={reading} alt='Reading Content' srcSet='' />\n        </div>\n        <div className='know-more'>\n          <p>Know More</p>\n          <p>\n            <i className='icon-down-open' />\n          </p>\n        </div>\n      </header>\n\n      <div className='problems'>\n        <h1>Problem</h1>\n        <h2>Twitter isnt the same anymore!</h2>\n        <p>\n          When Twitter started its humble beginnings, it was just a simple app\n          to compose tweets of 140 characters. But as days went by, several new\n          features ( or <em>distractions</em> ) were added to Twitter. With the\n          increasing number of distractions such as Images, Links,\n          Advertisemnts, etc. The vanilla Twitter experience faded. Gone were\n          the witty, sharp and funny tweets.\n        </p>\n        <p>\n          Kalrav is an attempt to restore Twitter back to it&apos;s glory days!\n        </p>\n      </div>\n\n      <Features />\n      <div className='btn-below'>\n        <h1> What are you waiting for? </h1>\n        <Link to='/login' className='action-button'>\n          Get Started\n        </Link>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Navbar.css';\n\nfunction Navbar(props) {\n  const { user } = props;\n  // console.log(user);\n\n  // Links to be displayed with condition of user login\n  const linkList =\n    user !== null\n      ? [\n          <li className='appName' key={0} onClick={props.clickFunc}>\n            <Link to='/feed'>Kalrav</Link>\n          </li>,\n          <li key={1}>\n            <button\n              type='button'\n              onClick={() => {\n                props.logoutUser().then(props.history.push('/'));\n              }}\n            >\n              Logout\n            </button>\n          </li>,\n          <li key={2}>\n            <Link to='/about'>About</Link>\n          </li>\n        ]\n      : [\n          <li className='appName' key={5}>\n            <Link to='/'>Kalrav</Link>\n          </li>,\n          <li key={6}>\n            <Link to='/Login'>Login</Link>\n          </li>,\n          <li key={7}>\n            <Link to='/about'>About</Link>\n          </li>\n        ];\n\n  return (\n    <nav className='navbar'>\n      <ul className='Navlinks'>{linkList}</ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport axios from 'axios';\nimport '../styles/Login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: false,\n      showPinbox: false\n    };\n  }\n\n  componentWillMount() {\n    // console.log('We are mounted');\n\n    if (this.props.loginUser() === false) {\n      this.setState({\n        showForm: true\n      });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleLogin = e => {\n    e.preventDefault();\n    axios.get('/api/auth/twitter/url').then(resp => {\n      if (resp) {\n        // console.log(resp.data.url);\n        this.setState({\n          showPinbox: true\n        });\n\n        window.open(`${resp.data.url}`, '_blank');\n      } else {\n        // console.log(resp);\n      }\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state, this.props);\n    this.setState({\n      showForm: false\n    });\n    if (this.state.pin !== null) {\n      this.props.loginUser(this.state.pin);\n    }\n  };\n\n  render() {\n    // console.log('STATE : ', this.state, '\\nPROPS : ', this.props);\n\n    if (this.props.user) {\n      return <Redirect to='/feed' />;\n    }\n\n    const { showPinbox } = this.state;\n    return (\n      <div className='login'>\n        <div className='container'>\n          <Navbar\n            user={this.props.user}\n            logoutUser={this.props.logoutUser}\n            history={this.props.history}\n          />\n          <h1>Login</h1>\n          {this.state.showForm ? (\n            <form\n              onSubmit={e => {\n                if (showPinbox) {\n                  this.handleSubmit(e);\n                } else {\n                  this.handleLogin(e);\n                }\n              }}\n            >\n              {this.state.showPinbox ? (\n                <input\n                  type='text'\n                  placeholder='PIN provided by Twitter'\n                  id='pin'\n                  onChange={this.handleChange}\n                />\n              ) : (\n                ' '\n              )}\n              <button type='submit' className='action-button'>\n                Login via <i className='icon-twitter' />\n              </button>\n            </form>\n          ) : (\n            'Trying to Login'\n          )}\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n// import Link from 'react-router-dom';\nimport '../styles/TweetBtn.css';\n\nclass TweetBtn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: false,\n      content: null\n    };\n  }\n\n  handleClick = () => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      content: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.content !== null) {\n      this.props.addTweet({ content: this.state.content });\n    }\n    this.setState({\n      isActive: false,\n      content: null\n    });\n  };\n\n  render() {\n    if (this.state.isActive) {\n      return (\n        <div className='tweetbtn active'>\n          <i className='icon-vector-pencil' />\n          <form onSubmit={this.handleSubmit}>\n            <textarea\n              rows='5'\n              placeholder='Tweet Something?'\n              autoFocus\n              onChange={this.handleChange}\n            />\n            <button type='submit' className='action-button'>\n              Tweet\n            </button>\n          </form>\n        </div>\n      );\n    }\n\n    return (\n      <div className='tweetbtn' onClick={this.handleClick}>\n        <i className='icon-vector-pencil' />\n        <p>{this.props.placeholder}</p>\n      </div>\n    );\n  }\n}\n\nTweetBtn.defaultProps = {\n  placeholder: 'Tweet Something ?'\n};\n\nexport default TweetBtn;\n","import React, { Component } from 'react';\nimport Linkify from 'react-linkify';\n// import Link from 'react-router-dom';\nimport '../styles/Tweet.css';\nimport TweetBtn from './TweetBtn';\nimport axios from 'axios';\n\nclass Tweet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLiked: false,\n      showReply: false,\n      isRetweet: false\n    };\n  }\n\n  handleClickReply = e => {\n    if (!this.state.showReply) {\n      this.setState({\n        showReply: true\n      });\n    } else {\n      this.setState({\n        showReply: false\n      });\n    }\n  };\n\n  handleClickLike = e => {\n    if (!this.state.isLiked) {\n      axios.get(`/api/like/${this.props.tweet.id_str}`).then(resp => {\n        if (resp.status === 200) {\n          this.setState({\n            isLiked: true\n          });\n        }\n      });\n    } else {\n      axios.get(`/api/like/remove/${this.props.tweet.id_str}`).then(resp => {\n        if (resp.status === 200) {\n          this.setState({\n            isLiked: false\n          });\n        }\n      });\n    }\n  };\n\n  handleClickRetweet = e => {\n    if (!this.state.isRetweet) {\n      this.setState({\n        isRetweet: true\n      });\n    } else {\n      this.setState({\n        isRetweet: false\n      });\n    }\n  };\n\n  addTweet = e => {\n    if (this.state.showReply) {\n      this.setState({\n        showReply: false\n      });\n    }\n  };\n\n  render() {\n    const { tweet } = this.props;\n    let tweetContent = tweet.text;\n    const replyBox = this.state.showReply ? (\n      <TweetBtn placeholder='Reply to this tweet' addTweet={this.addTweet} />\n    ) : (\n      <div />\n    );\n    if (tweet.entities.media) {\n      tweetContent = tweet.text.substring(0, tweet.text.length - 23);\n    }\n    const likeClass = this.state.isLiked ? 'isLiked' : '';\n    const replyClass = this.state.showReply ? 'isReply' : '';\n    const retweetClass = this.state.isRetweet ? 'isRetweet' : '';\n    return (\n      <div className='Tweet' key={`tweet-${tweet.id}`}>\n        <div className='author'>{tweet.user.name}</div>\n        <Linkify\n          properties={{\n            target: '_blank'\n          }}\n        >\n          <div className='content'>{tweetContent}</div>\n        </Linkify>\n\n        {tweet.entities.media ? (\n          <div className='media'>\n            <img src={tweet.entities.media[0].media_url} alt='' />\n          </div>\n        ) : null}\n        <div className='tweetActions'>\n          <button\n            type='button'\n            onClick={this.handleClickLike}\n            className={likeClass}\n          >\n            <i className='icon-heart' />\n          </button>\n          <button\n            type='button'\n            onClick={this.handleClickRetweet}\n            className={retweetClass}\n          >\n            <i className='icon-retweet-1' />\n          </button>\n          <button\n            type='button'\n            onClick={this.handleClickReply}\n            className={replyClass}\n          >\n            <i className='icon-comment' />\n          </button>\n          {replyBox}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tweet;\n","import React from 'react';\nimport '../styles/TweetFeed.css';\nimport Tweet from './Tweet';\n// import Link from 'react-router-dom';\n\nfunction TweetFeed({ tweets, fetchTweets }) {\n  // console.log(tweets);\n  const tweetList = tweets ? (\n    tweets.map(tweet => {\n      // console.log(tweet);\n      return <Tweet key={tweet.id} tweet={tweet} />;\n    })\n  ) : (\n    <p>The Tweet feed seems to be empty</p>\n  );\n  return (\n    <div className='TweetFeed-wrapper'>\n      <div className='TweetFeed'>{tweetList}</div>\n      <div className='MoreTweets'>\n        <button className='action-button' onClick={fetchTweets}>\n          Get More Tweets\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TweetFeed;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n// import axios from 'axios';\nimport Navbar from './Navbar';\nimport Tweetbtn from './TweetBtn';\nimport TweetFeed from './TweetFeed';\nimport '../styles/Feed.css';\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: null\n    };\n  }\n\n  fetchTweets = tweet_id => {\n    let tweets = JSON.parse(localStorage.getItem('tweets'));\n\n    if (tweet_id) {\n      // console.log('New tweets incoming!');\n      fetch(`/api/tweets${tweet_id}`)\n        .then(response => {\n          return response.json();\n        })\n        .then(data => this.setState({ tweets: data.tweets }))\n        .finally();\n    } else {\n      if (tweets) {\n        // console.log('Restoring Tweets');\n        this.setState({\n          tweets: tweets\n        });\n      } else {\n        // console.log('Getting fresh tweets');\n        fetch('/api/tweets')\n          .then(response => {\n            return response.json();\n          })\n          .then(data => {\n            this.setState({ tweets: data.tweets });\n            localStorage.setItem('tweets', JSON.stringify(data.tweets));\n          })\n          .finally();\n      }\n    }\n  };\n\n  refreshTweets = () => {\n    localStorage.setItem('tweets', null);\n    // console.log('Refreshing Tweets');\n\n    this.fetchTweets();\n  };\n\n  componentDidMount() {\n    this.fetchTweets();\n  }\n\n  addTweet = tweet => {\n    tweet.author = this.props.user.username;\n    tweet.id = Math.random();\n    // console.log(tweet);\n    const { tweets } = this.state;\n    const postNew = tweets.length ? [tweet, ...tweets] : tweets;\n    this.setState({\n      tweets: postNew\n    });\n  };\n\n  render() {\n    // console.log(this.state.tweets);\n    if (this.props.user) {\n      return (\n        <div className='feed container'>\n          <Navbar\n            user={this.props.user}\n            clickFunc={this.refreshTweets}\n            logoutUser={this.props.logoutUser}\n            history={this.props.history}\n          />\n          <Tweetbtn addTweet={this.addTweet} />\n          {this.state.tweets ? (\n            <TweetFeed\n              tweets={this.state.tweets}\n              fetchTweets={this.fetchTweets}\n            />\n          ) : (\n            'Fetching Tweets...'\n          )}\n        </div>\n      );\n    }\n    return <Redirect to='/login' />;\n  }\n}\n\nexport default Feed;\n","import React from 'react';\nimport '../styles/About.css';\nimport { Link } from 'react-router-dom';\nimport Footer from './Footer';\nimport Navbar from './Navbar';\n\nfunction About({ user, logoutUser, history }) {\n  return (\n    <div className='about container'>\n      <Navbar user={user} logoutUser={logoutUser} history={history} />\n      <h1>About Us</h1>\n      <p>\n        When Twitter started its humble beginnings, it was just a simple app to\n        compose tweets of 140 characters. But as days went by, several new\n        features ( or <em>distractions</em> ) were added to Twitter. With the\n        increasing number of distractions such as Images, Links, Advertisemnts,\n        etc. The vanilla Twitter experience faded. Gone were the witty, sharp\n        and funny tweets.\n      </p>\n      <p>\n        Kalrav is an attempt to restore Twitter back to it&apos;s glory days!\n      </p>\n      <div className='btn-below'>\n        <Link to='/login' className='action-button'>\n          Get Started\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Feed from './components/Feed';\nimport About from './components/About';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      data: null\n    };\n  }\n\n  componentDidMount = () => {\n    fetch('/api/')\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n  };\n\n  loginUser = pin => {\n    // Get the current 'global' time from an API using Promise\n    // console.log('Logging In user: ', user);\n    if (this.state.user == null && pin != null) {\n      axios\n        .post('/api/auth/twitter/login', {\n          pin: pin\n        })\n        .then(resp => {\n          localStorage.setItem('access_token', resp.data.token);\n          localStorage.setItem('access_secret', resp.data.secret);\n        })\n        .finally(() => {\n          axios.get('/api/get/user').then(resp => {\n            // console.log(resp.data);\n            this.setState({\n              user: {\n                username: resp.data.username,\n                profileImage: resp.data.profile_image_url\n              }\n            });\n          });\n        });\n      // var interval = setInterval(()=> {\n\n      // })\n    } else if (this.state.user == null) {\n      let accessToken = localStorage.getItem('access_token');\n      let accessSecret = localStorage.getItem('access_secret');\n      // console.log('Token : ', accessToken, ' Secret : ', accessSecret);\n\n      if (accessSecret && accessToken) {\n        axios\n          .post('/api/auth/twitter/set', {\n            token: accessToken,\n            secret: accessSecret\n          })\n          .then(resp => {\n            // console.log('RESPONSE: ', resp.data);\n          })\n          .finally(() => {\n            axios.get('/api/get/user').then(resp => {\n              // console.log(resp.data);\n              this.setState({\n                user: {\n                  username: resp.data.username,\n                  profileImage: resp.data.profile_image_url\n                }\n              });\n            });\n          });\n      } else {\n        return false;\n      }\n    }\n  };\n\n  logoutUser = () => {\n    const { user } = this.state;\n    return new Promise(() => {\n      // console.log('Logging Out user: ', this.state.user);\n      if (user) {\n        this.setState({\n          user: null\n        });\n        localStorage.clear();\n      }\n    });\n  };\n\n  render() {\n    // console.log('The state is: ', this.state);\n    const { user, data } = this.state;\n\n    // console.log(user, data);\n\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Route exact path='/' component={Home} />\n\n          <Route\n            exact\n            path='/login'\n            render={props => (\n              <Login\n                {...props}\n                user={user}\n                loginUser={this.loginUser}\n                logoutUser={this.logoutUser}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path='/feed'\n            render={props => (\n              <Feed {...props} user={user} logoutUser={this.logoutUser} />\n            )}\n          />\n\n          <Route\n            exact\n            path='/about'\n            render={props => (\n              <About {...props} user={user} logoutUser={this.logoutUser} />\n            )}\n          />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}