{"version":3,"sources":["images/74-nauseated-face-2.svg","images/661-sparkles.svg","images/713-open-book.svg","images/406-heart-with-ribbon.svg","images/undraw_absorbed.svg","components/Features.js","components/Footer.js","components/Home.js","components/Navbar.js","components/Login.js","components/TweetBtn.js","components/Tweet.js","components/TweetFeed.js","components/Feed.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Features","react_default","a","createElement","className","src","nauseated","alt","sparkles","book","gift","Footer","react_router_dom","to","href","Home","reading","srcSet","components_Features","components_Footer","Navbar","props","linkList","user","key","type","onClick","logoutUser","then","history","push","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","id","value","handleLogin","preventDefault","axios","get","resp","console","log","data","url","showPinbox","window","open","concat","handleSubmit","showForm","state","username","post","pin","localStorage","setItem","token","secret","finally","loginUser","accessToken","getItem","accessSecret","_this2","react_router","components_Navbar","onSubmit","placeholder","onChange","Component","TweetBtn","handleClick","isActive","content","addTweet","rows","autoFocus","defaultProps","Tweet","handleClickReply","showReply","handleClickLike","isLiked","handleClickRetweet","isRetweet","_this$props","author","replyBox","components_TweetBtn","likeClass","replyClass","retweetClass","TweetFeed","_ref","posts","fetchTweets","tweetList","map","tweet","components_Tweet","name","text","Feed","fetch","response","json","tweets","Math","random","postNew","length","toConsumableArray","components_TweetFeed","About","App","componentDidMount","profileImage","profile_image_url","Promise","_this$state","exact","path","component","render","components_Login","assign","components_Feed","components_About","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc183580.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/74-nauseated-face-2.d3d1e0e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/661-sparkles.a4586395.svg\";","module.exports = __webpack_public_path__ + \"static/media/713-open-book.de4934a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/406-heart-with-ribbon.b142cd3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_absorbed.e154de50.svg\";","import React from 'react';\nimport '../styles/Features.css';\nimport nauseated from '../images/74-nauseated-face-2.svg';\nimport sparkles from '../images/661-sparkles.svg';\nimport book from '../images/713-open-book.svg';\nimport gift from '../images/406-heart-with-ribbon.svg';\n\nfunction Features() {\n  return (\n    <div className=\"features\">\n      <h1>Features</h1>\n      <p>Kalrav is packed with exciting features!</p>\n      <div className=\"featureSet\">\n        <div className=\"feature\">\n          <img src={nauseated} alt=\"\" />\n          <h2>Don&apos;t Nauseate</h2>\n          <p>We only display content that matters, the actual tweets that is.</p>\n        </div>\n        <div className=\"feature\">\n          <img src={sparkles} alt=\"\" />\n          <h2>Clean & Minimal</h2>\n          <p>Everything is there for a reason and that reason is you.</p>\n        </div>\n        <div className=\"feature\">\n          <img src={book} alt=\"\" />\n          <h2>Reading Experience</h2>\n          <p>With only you and the tweets, there is a great reading experience!</p>\n        </div>\n        <div className=\"feature\">\n          <img src={gift} alt=\"\" />\n          <h2>\n            Created with <i className=\"icon-heart\" />\n          </h2>\n          <p>We have worked hard to provide this excellent expereince to you!</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Features;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Footer.css';\n\nfunction Footer() {\n  return (\n    <footer className=\"Footer\">\n      <div className=\"logo\">\n        <h1>Kalrav</h1>\n        <p>© 2019 xypnox</p>\n      </div>\n      <div className=\"footer-links\">\n        <Link to=\"/login\">Login</Link>\n        <Link to=\"/about\">About</Link>\n        <a href=\"https://github.com/xypnox/kalrav/\">Github Repo</a>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Features from './Features';\nimport Footer from './Footer';\nimport '../styles/Home.css';\nimport reading from '../images/undraw_absorbed.svg';\n\nfunction Home() {\n  return (\n    <div className=\"home container\">\n      <header>\n        <div className=\"intro\">\n          <div>\n            <h1>Kalrav</h1>\n            <h2>A tweet app</h2>\n            <Link to=\"/login\" className=\"action-button\">\n              Get Started\n            </Link>\n          </div>\n          <img src={reading} alt=\"Reading Content\" srcSet=\"\" />\n        </div>\n        <div className=\"know-more\">\n          <p>Know More</p>\n          <p>\n            <i className=\"icon-down-open\" />\n          </p>\n        </div>\n      </header>\n\n      <div className=\"problems\">\n        <h1>Problem</h1>\n        <h2>Twitter isnt the same anymore!</h2>\n        <p>\n          When Twitter started its humble beginnings, it was just a simple app to compose tweets of\n          140 characters. But as days went by, several new features ( or <em>distractions</em> )\n          were added to Twitter. With the increasing number of distractions such as Images, Links,\n          Advertisemnts, etc. The vanilla Twitter experience faded. Gone were the witty, sharp and\n          funny tweets.\n        </p>\n        <p>Kalrav is an attempt to restore Twitter back to it&apos;s glory days!</p>\n      </div>\n\n      <Features />\n      <div className=\"btn-below\">\n        <h1> What are you waiting for? </h1>\n        <Link to=\"/login\" className=\"action-button\">\n          Get Started\n        </Link>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Navbar.css';\n\nfunction Navbar(props) {\n  const { user } = props;\n  // console.log(user);\n\n  // Links to be displayed with condition of user login\n  const linkList =\n    user !== null\n      ? [\n          <li className=\"appName\" key={0}>\n            <Link to=\"/feed\">Kalrav</Link>\n          </li>,\n          <li key={1}>\n            <Link to=\"/settings\">Settings</Link>\n          </li>,\n          <li key={2}>\n            <button\n              type=\"button\"\n              onClick={() => {\n                props.logoutUser().then(props.history.push('/'));\n              }}\n            >\n              Logout\n            </button>\n          </li>,\n          <li key={3}>\n            <Link to=\"/tweet\">Tweet</Link>\n          </li>,\n          <li key={4}>\n            <Link to=\"/about\">About</Link>\n          </li>,\n        ]\n      : [\n          <li className=\"appName\" key={5}>\n            <Link to=\"/\">Kalrav</Link>\n          </li>,\n          <li key={6}>\n            <Link to=\"/Login\">Login</Link>\n          </li>,\n          <li key={7}>\n            <Link to=\"/about\">About</Link>\n          </li>,\n        ];\n\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"Navlinks\">{linkList}</ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport axios from 'axios';\nimport '../styles/Login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: false,\n      showPinbox: false\n    };\n  }\n\n  componentWillMount() {\n    console.log('We are mounted');\n\n    let accessToken = localStorage.getItem('access_token');\n    let accessSecret = localStorage.getItem('access_secret');\n    console.log('Token : ', accessToken, ' Secret : ', accessSecret);\n\n    if (accessSecret && accessToken) {\n      axios\n        .post('/api/auth/twitter/set', {\n          token: accessToken,\n          secret: accessSecret\n        })\n        .then(resp => {\n          console.log('RESPONSE: ', resp.data);\n        })\n        .then(this.props.loginUser());\n    } else {\n      this.setState({\n        showForm: true\n      });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleLogin = e => {\n    e.preventDefault();\n    axios.get('/api/auth/twitter/url').then(resp => {\n      if (resp) {\n        console.log(resp.data.url);\n        this.setState({\n          showPinbox: true\n        });\n\n        window.open(`${resp.data.url}`, '_blank');\n      } else {\n        console.log(resp);\n      }\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state, this.props);\n    this.setState({\n      showForm: false\n    });\n    if (this.state.username !== null) {\n      axios\n        .post('/api/auth/twitter/login', {\n          pin: this.state.pin\n        })\n        .then(resp => {\n          console.log(resp.data);\n          localStorage.setItem('access_token', resp.data.token);\n          localStorage.setItem('access_secret', resp.data.secret);\n        })\n        .finally(this.props.loginUser());\n    }\n  };\n\n  render() {\n    console.log('STATE : ', this.state, '\\nPROPS : ', this.props);\n\n    if (this.props.user) {\n      return <Redirect to='/feed' />;\n    }\n\n    const { showPinbox } = this.state;\n    return (\n      <div className='login'>\n        <div className='container'>\n          <Navbar\n            user={this.props.user}\n            logoutUser={this.props.logoutUser}\n            history={this.props.history}\n          />\n          <h1>Login</h1>\n          {this.state.showForm ? (\n            <form\n              onSubmit={e => {\n                if (showPinbox) {\n                  this.handleSubmit(e);\n                } else {\n                  console.log('handleing login');\n                  this.handleLogin(e);\n                }\n              }}\n            >\n              {this.state.showPinbox ? (\n                <input\n                  type='text'\n                  placeholder='PIN provided by Twitter'\n                  id='pin'\n                  onChange={this.handleChange}\n                />\n              ) : (\n                ' '\n              )}\n              <button type='submit' className='action-button'>\n                Login via <i className='icon-twitter' />\n              </button>\n            </form>\n          ) : (\n            'Trying to Login'\n          )}\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n// import Link from 'react-router-dom';\nimport '../styles/TweetBtn.css';\n\nclass TweetBtn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: false,\n      content: null,\n    };\n  }\n\n  handleClick = () => {\n    this.setState({\n      isActive: true,\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      content: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.content !== null) {\n      this.props.addTweet({ content: this.state.content });\n    }\n    this.setState({\n      isActive: false,\n      content: null,\n    });\n  };\n\n  render() {\n    if (this.state.isActive) {\n      return (\n        <div className=\"tweetbtn active\">\n          <i className=\"icon-vector-pencil\" />\n          <form onSubmit={this.handleSubmit}>\n            <textarea\n              rows=\"5\"\n              placeholder=\"Tweet Something?\"\n              autoFocus\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\" className=\"action-button\">\n              Tweet\n            </button>\n          </form>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"tweetbtn\" onClick={this.handleClick}>\n        <i className=\"icon-vector-pencil\" />\n        <p>{this.props.placeholder}</p>\n      </div>\n    );\n  }\n}\n\nTweetBtn.defaultProps = {\n  placeholder: 'Tweet Something ?',\n};\n\nexport default TweetBtn;\n","import React, { Component } from 'react';\n// import Link from 'react-router-dom';\nimport '../styles/Tweet.css';\nimport TweetBtn from './TweetBtn';\n\nclass Tweet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLiked: false,\n      showReply: false,\n      isRetweet: false,\n    };\n  }\n\n  handleClickReply = e => {\n    if (!this.state.showReply) {\n      this.setState({\n        showReply: true,\n      });\n    } else {\n      this.setState({\n        showReply: false,\n      });\n    }\n  };\n\n  handleClickLike = e => {\n    if (!this.state.isLiked) {\n      this.setState({\n        isLiked: true,\n      });\n    } else {\n      this.setState({\n        isLiked: false,\n      });\n    }\n  };\n\n  handleClickRetweet = e => {\n    if (!this.state.isRetweet) {\n      this.setState({\n        isRetweet: true,\n      });\n    } else {\n      this.setState({\n        isRetweet: false,\n      });\n    }\n  };\n\n  addTweet = e => {\n    if (this.state.showReply) {\n      this.setState({\n        showReply: false,\n      });\n    }\n  };\n\n  render() {\n    const { id, author, content } = this.props;\n    const replyBox = this.state.showReply ? (\n      <TweetBtn placeholder=\"Reply to this tweet\" addTweet={this.addTweet} />\n    ) : (\n      <div />\n    );\n    const likeClass = this.state.isLiked ? 'isLiked' : '';\n    const replyClass = this.state.showReply ? 'isReply' : '';\n    const retweetClass = this.state.isRetweet ? 'isRetweet' : '';\n    return (\n      <div className=\"Tweet\" key={id}>\n        <div className=\"author\">{author}</div>\n        <div className=\"content\">{content}</div>\n        <div className=\"tweetActions\">\n          <button type=\"button\" onClick={this.handleClickLike} className={likeClass}>\n            <i className=\"icon-heart\" />\n          </button>\n          <button type=\"button\" onClick={this.handleClickRetweet} className={retweetClass}>\n            <i className=\"icon-retweet-1\" />\n          </button>\n          <button type=\"button\" onClick={this.handleClickReply} className={replyClass}>\n            <i className=\"icon-comment\" />\n          </button>\n          {replyBox}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tweet;\n","import React from 'react';\nimport '../styles/TweetFeed.css';\nimport Tweet from './Tweet';\n// import Link from 'react-router-dom';\n\nfunction TweetFeed({ posts, fetchTweets }) {\n  console.log(posts);\n  const tweetList = posts ? (\n    posts.map(tweet => {\n      console.log(tweet);\n      return (\n        <Tweet\n          key={tweet.id}\n          id={tweet.id}\n          author={tweet.user.name}\n          content={tweet.text}\n        />\n      );\n    })\n  ) : (\n    <p>No Tweets yet</p>\n  );\n  return (\n    <div className='TweetFeed-wrapper'>\n      <div className='TweetFeed'>{tweetList}</div>\n      <div className='MoreTweets'>\n        <button className='action-button' onClick={fetchTweets}>\n          Get More Tweets\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TweetFeed;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n// import axios from 'axios';\nimport Navbar from './Navbar';\nimport Tweetbtn from './TweetBtn';\nimport TweetFeed from './TweetFeed';\nimport '../styles/Feed.css';\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: null\n    };\n  }\n\n  fetchTweets = () => {\n    fetch('/api/tweets')\n      .then(response => {\n        return response.json();\n      })\n      .then(posts => this.setState({ posts: posts.tweets }))\n      .finally();\n  };\n\n  componentDidMount() {\n    this.fetchTweets();\n  }\n\n  addTweet = tweet => {\n    tweet.author = this.props.user.username;\n    tweet.id = Math.random();\n    // console.log(tweet);\n    const { posts } = this.state;\n    const postNew = posts.length ? [tweet, ...posts] : posts;\n    this.setState({\n      posts: postNew\n    });\n  };\n\n  render() {\n    // console.log(this.state.posts);\n    if (this.props.user) {\n      return (\n        <div className='feed container'>\n          <Navbar\n            user={this.props.user}\n            logoutUser={this.props.logoutUser}\n            history={this.props.history}\n          />\n          <Tweetbtn addTweet={this.addTweet} />\n          {this.state.posts ? (\n            <TweetFeed\n              posts={this.state.posts}\n              fetchTweets={this.fetchTweets}\n            />\n          ) : (\n            'No Tweets yet'\n          )}\n        </div>\n      );\n    }\n    return <Redirect to='/login' />;\n  }\n}\n\nexport default Feed;\n","import React from 'react';\nimport '../styles/About.css';\nimport { Link } from 'react-router-dom';\nimport Footer from './Footer';\nimport Navbar from './Navbar';\n\nfunction About({ user, logoutUser, history }) {\n  return (\n    <div className='about container'>\n      <Navbar user={user} logoutUser={logoutUser} history={history} />\n      <h1>About Us</h1>\n      <p>\n        When Twitter started its humble beginnings, it was just a simple app to\n        compose tweets of 140 characters. But as days went by, several new\n        features ( or <em>distractions</em> ) were added to Twitter. With the\n        increasing number of distractions such as Images, Links, Advertisemnts,\n        etc. The vanilla Twitter experience faded. Gone were the witty, sharp\n        and funny tweets.\n      </p>\n      <p>\n        Kalrav is an attempt to restore Twitter back to it&apos;s glory days!\n      </p>\n      <div className='btn-below'>\n        <Link to='/login' className='action-button'>\n          Get Started\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Feed from './components/Feed';\nimport About from './components/About';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      data: null\n    };\n  }\n\n  componentDidMount = () => {\n    fetch('/api/')\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n  };\n\n  loginUser = () => {\n    // Get the current 'global' time from an API using Promise\n    // console.log('Logging In user: ', user);\n    if (this.state.user == null) {\n      axios.get('/api/get/user').then(resp => {\n        console.log(resp.data);\n        this.setState({\n          user: {\n            username: resp.data.username,\n            profileImage: resp.data.profile_image_url\n          }\n        });\n      });\n    }\n  };\n\n  logoutUser = () => {\n    const { user } = this.state;\n    return new Promise(() => {\n      // console.log('Logging Out user: ', this.state.user);\n      if (user) {\n        this.setState({\n          user: null\n        });\n      }\n    });\n  };\n\n  render() {\n    // console.log('The state is: ', this.state);\n    const { user, data } = this.state;\n\n    console.log(user, data);\n\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Route exact path='/' component={Home} />\n\n          <Route\n            exact\n            path='/login'\n            render={props => (\n              <Login\n                {...props}\n                user={user}\n                loginUser={this.loginUser}\n                logoutUser={this.logoutUser}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path='/feed'\n            render={props => (\n              <Feed {...props} user={user} logoutUser={this.logoutUser} />\n            )}\n          />\n\n          <Route\n            exact\n            path='/about'\n            render={props => (\n              <About {...props} user={user} logoutUser={this.logoutUser} />\n            )}\n          />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}